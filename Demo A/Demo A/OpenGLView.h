//
//  OpenGLView.h
//  Darpa CFT
//
//  Created by Jared Carlson on 3/5/12.
//  Copyright 2012 GoToTheBoard. All rights reserved.
//

#import <UIKit/UIKit.h>
#import <QuartzCore/QuartzCore.h>
#import <OpenGLES/ES2/gl.h>
#import <OpenGLES/ES2/glext.h>

@interface OpenGLView : UIView
{
    CAEAGLLayer * _eaglLayer;
    EAGLContext * _context;
    GLuint _colorRenderBuffer;
    GLuint frameBuffer;
    GLuint _depthRenderBuffer;
    
    GLuint _texDepthRenderBuffer;
    
    GLuint _positionSlot;
    GLuint _colorSlot;
    GLuint _texSlot;
    GLuint _projectionUniform;
    GLuint _modelViewUniform;
    GLuint _offset;
    
    GLubyte * bytes;
    GLubyte * texturebuffer;
    
    GLuint program;
    
    GLuint texture;
    GLint sampler;
    GLint mask;
    
    GLuint vertexBuffer;
    GLuint indexBuffer;
    
    GLuint offScreenTexture;
    GLuint offTexture;
    BOOL renderOff;
    
    GLuint heapTexture;
    
    void * heapPtr;
    
    unsigned char * matrix1;
    unsigned char * matrix2;
    
    float offset[2];
    NSUInteger _sigThreshold;

}


// set up layers...
- (void)setupLayer;
- (void)setupRenderBuffer;
- (void)setupDepthBuffer;
- (void)setupContext;
- (void)setupFrameBuffer;
- (void)setupVBOs;
- (void)setupDisplayLink;
- (void)printGLString:(const char*)name enum:(GLenum)e;

- (GLuint)setupTexture:(NSString *)fileName;

// generate off screen texture
- (GLuint) generateOffScreenTexture;
- (GLuint) generateBlankTexture;

// compile the shaders..
- (void)compileShaders;
- (void)createTextureForData;
- (void)render:(CADisplayLink*)displayLink;
- (void)renderCheck:(CADisplayLink*)displayLink;

// build texture from heap...
- (void) populateHeap;
- (void) generateTextureFromHeap:(void*)heap;
- (GLuint) generateDiagonalMatrixTexture:(unsigned char)value dimension:(size_t)dimension matrix:(unsigned char*)matrix;
- (GLuint) loadSignatureFromFile:(NSString*)file;
- (NSUInteger) fitPowerOf2:(NSUInteger)length;

// load the external binary to scan
- (BOOL) loadBinaryPayload:(unsigned char*)payload length:(unsigned int)length;
- (BOOL) analyzeBuffer:(unsigned char*)payload;

// sweep through...
- (BOOL) renderAndSweep;
- (void) sweep:(float*)offs;

// rendering
- (BOOL) renderToTexture;
- (void) renderToScreen;

// utility..
- (GLuint)setupTextureFromData:(unsigned  char*)data length:(NSUInteger)length;
- (GLuint)compileShader:(NSString*)shaderName withType:(GLenum)shaderType;

// analysis functions
- (void) setSignatureThreshold:(NSString*)sigfile;
- (void) analyzePixelData:(void*)pixels offset:(float*)offset;
- (void) analyzePixelHeap:(void*)pixels;

@end
