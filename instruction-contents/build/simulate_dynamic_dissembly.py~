#!usr/env python

import subprocess, random, simplejson
# to install simplejson: pip install simplejson

# First we read in our instruction file that we want to use 
filename = 'sim.instructions'
instructions = open(filename).readlines()
print "Read ",len(instructions)," instructions from the file ",filename

# now let's get rid of 3-4 instructions (roughly 10% from our given file)
random.seed(24)
samples = list(instructions)
n = 8
for xx in xrange(0,n):
    index = random.randint(0,len(instructions)-1)
    samples[index] = 'xxx'

# Now we have a few unknown ops, let's use our C-code to on-the-fly generate 
# disassembly using probability tables
last_instruction = False
application = './optimization'
args = ''
digraph = 'simple.digraph'
recreated = []
index = 0
for instr in samples:
    if ( instr == 'xxx' ):
        # call out...
        try:
            prob_instruction = subprocess.check_output([application,last_instruction,digraph])
            instr = prob_instruction
            print "replacing %s with %s " % (instructions[index],instr)
        except:
            print "Error in our C-code, time to debug..."
    # append...
    recreated.append(instr)
    last_instruction = instr
    index+=1

# Now we test our disassembly to see how much we got right...
errors = 0
for i in xrange(0,len(instructions)):
    if recreated[i] != instructions[i]:
        errors+=1

print "* * * ",errors," Errors in ",n," unknown operations * * *"




