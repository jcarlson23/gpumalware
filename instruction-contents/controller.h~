#pragma once
#include <iostream>
#include <map>
#include "trie.h"

using std::map;
using std::string;


enum mode {
  Normal = 0,
  Opcode,
};

class Controller
{
 public:
  Controller(void);
  bool ProcessFile( const string& str );
  Trie *TreeForFile( const string& str );
  size_t NumberOfUniqueInstructionAcrossTrees( void );
  bool ListInstructionsToFile( const string& filename ); 
  void WriteOpcodes(void);
  void SetModeToNormal( void ) { output_mode = Normal; callback = NULL; }
  void SetModeToOpcode( void ) { output_mode = Opcode; callback = NULL; }
  string Mode( void );

  // floating point matrix...
  Matrix *DiGraph( void );
  bool WriteDiGraphToFile( const string& filename );


 private:
  vector<string> UniqueInstructions( void );
  vector<string> UniqueOpcodes( void );

 private:
  void (Controller::*callback)(void);
  enum mode output_mode;
  map<std::string,Trie*> trees;
  

};
