{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs24 \cf0 Demo B
\b0 \
\

\b Explanation:
\b0   This is a demonstration of using the GPU both interactively and continuously, calling for \
memory checks following a calculation in addition to running constant memory checking during the application\
execution.\
\

\b How to run:
\b0  This can be run in the simulator on the actual device.  Performance numbers in the report are based\
on device testing.\
\
The application will allow the user to perform Matrix calculations with predefined inputs and monitor the memory\
of the result.  After two seconds the application will corrupt the memory of the region of interest and at this point\
the application will log a message (via NSLog), alert the user (on screen) and force the application to quit. \
\
Once in a while the matrices will be allocated far enough that a simple memory copy is too large and in this case\
we suggest simply rerunning - although a production quality algorithm would move the segments to be monitored\
nearby.. we skip this step as it's not directly related to the project.\
}